{"version":3,"sources":["Components/Patient/Patient.jsx","Components/Record/Record.jsx","Pages/Dashboards/Admin/Admin.jsx","Pages/Dashboards/Hospital/Hospital.jsx","utils.js","Components/Loading/Loading.jsx","Components/Navbar/Navbar.jsx","Components/Counts/Counts.jsx","Components/Info/Info.jsx","Components/Why Us/WhyUs.jsx","Pages/Home/Home.jsx","Components/Bc-Eth-Dmed/Bc-Eth-Dmed.jsx","Components/Intro/Intro.jsx","Components/Problem/Problem.jsx","Components/Solution/Solution.jsx","Pages/About/About.jsx","Pages/Services/Services.jsx","Components/Footer/Footer.jsx","Pages/Dashboards/Main/MainDashBoard.jsx","Pages/Dashboards/Public/PublicDashBorad.jsx","Pages/Dashboards/Auth/Auth.jsx","Pages/Dashboards/Owner/Owner.jsx","Pages/Dashboards/Patient/Patient.jsx","App.js","index.js"],"names":["Patient","patient","className","src","alt","Record","record","hospitalId","condition","description","allergy","docs","Admin","useState","undefined","web3","setWeb3","accounts","setAccounts","contract","setContract","ipfs","setIpfs","history","useHistory","name","address","ethAdd","hospital","setHospital","hospitalBuffer","setHospitalBuffer","org","setOrg","orgBuffer","setOrgBuffer","currentHospitalId","setCurrentHospitalId","currentOrgId","setCurrentOrgId","isReady","useEffect","init","a","getWeb3","eth","getAccounts","net","getId","networkId","deployedNetwork","DMed","networks","Error","Contract","abi","ipfsNode","create","methods","call","from","currHos","organizationId","currOrg","window","alert","push","ethereum","on","updateIds","handleSubmitHospital","e","preventDefault","add","result","addHospital","trim","path","send","console","error","handleSubmitOrg","log","addOrganization","onSubmit","type","id","placeholder","value","onChange","target","required","file","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","Hospital","patientId","setPatientId","setPatient","gender","bloodgroup","dob","number","patientAdd","setPatientAdd","patientBuffer","setPatientBuffer","hosId","patId","cond","desc","recordAdd","setRecordAdd","recordBuffer","setRecordBuffer","records","setRecords","setPatId","getPatient","getPatientDetails","pat","getRecords","getPatientRecords","recs","recsArray","i","length","handleSubmitPatient","addNewPatient","handleSubmitRecord","addNewRecord","getHospital","getHospitalByAddress","hos","physicalAddress","walletAddress","License","map","index","Promise","resolve","reject","onLoad","Web3","enable","Loading","role","Navbar","to","Counts","icon","color","width","height","Info","vantaEffect","setVantaEffect","myRef","useRef","CLOUDS","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","destroy","ref","WhyUs","style","Home","BcEthDmed","href","rel","Intro","Problem","Solution","About","Services","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","Item","Link","eventKey","Content","Pane","Footer","Dashboard","PublicDashBoard","owner","setOwner","admin","setAdmin","isAdmin","setIsAdmin","setHospitalId","orgId","setOrgId","getOwner","getAdmin","getHospitalById","getOrg","getOrganizationById","onClick","Auth","patientIdRec","setPatientIdRec","Owner","addAdmin","setAddAdmin","removeAdmin","setRemoveAdmin","transferOwnership","setTransferOwnership","AddAdmin","RemoveAdmin","TransferOwnership","changeOwner","yourId","setYourId","yourIdRec","setYourIdRec","addAuthId","setAddAuthId","addAuthAddress","setAddAuthAddress","removeAuthId","setRemoveAuthId","removeAuthAddress","setRemoveAuthAddress","handleAddAuthAddress","addAuthByAddress","handleAddAuthId","addAuthById","handleRemoveAuthAddress","revokeAuthByAddress","handleRemoveAuthId","revokeAuthById","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c20a6031.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Patient.css\";\n\nconst Patient = ({ patient }) => {\n    return (\n        <>\n            <div className=\"container patient\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 sec\">\n                        <img src={`https://ipfs.io/ipfs/${patient[7]}`} alt=\"no dp\" />\n                        <span>\n                            {patient[1]}\n                        </span>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"details-patient\">\n                            <ul>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Name :</span> {patient[1]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Id :</span> {patient[0]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Gender:</span> {patient[2]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Bloodgroup:</span> {patient[3]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Date of Birth:</span> {patient[4]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Phone Number :</span> {patient[5]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Address :</span> {patient[6]}\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Ethereum Address :</span> {patient[8]}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Patient\n","import React from 'react'\nimport \"./Record.css\";\n\nconst Record = ({record}) => {\n    return (\n        <>\n            <div className=\"container record\">\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n                        <div className=\"details-record\">\n                            <ul>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Hospital Id :</span>\n                                    <p>\n                                        {record.hospitalId}\n                                    </p>\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Condition :</span> \n                                    <p>\n                                        {record.condition}\n                                    </p>\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Description :</span> \n                                    <p>\n                                        {record.description}\n                                    </p>\n                                </li>\n                                <li className=\"row\">\n                                    <span className=\"col-md-5\">Allergies:</span> \n                                    <p>\n                                        {record.allergy}\n                                    </p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 rec\">\n                        <img src={`https://ipfs.io/ipfs/${record.docs}`} alt=\"no record\"/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Record\n","import React, { useState, useEffect } from 'react'\nimport \"./Admin.css\";\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\nimport { create } from \"ipfs-http-client\";\n\n\nconst Admin = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const [ipfs, setIpfs] = useState(undefined);\n    const history = useHistory();\n    const [hospital, setHospital] = useState({ name: \"\", address: \"\", ethAdd: \"\" });\n    const [hospitalBuffer, setHospitalBuffer] = useState(\"\");\n    const [org, setOrg] = useState({ name: \"\", ethAdd: \"\" });\n    const [orgBuffer, setOrgBuffer] = useState(\"\");\n    const [currentHospitalId, setCurrentHospitalId] = useState(undefined);\n    const [currentOrgId, setCurrentOrgId] = useState(undefined);\n\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n            && typeof ipfs !== 'undefined'\n            && typeof currentHospitalId !== 'undefined'\n            && typeof currentOrgId !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if (deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n                const ipfsNode = create('https://ipfs.infura.io:5001');\n\n                const currHos = await contract.methods.hospitalId().call({ from: accounts[0] });\n                const currOrg = await contract.methods.organizationId().call({ from: accounts[0] });\n\n                setCurrentHospitalId(currHos);\n                setCurrentOrgId(currOrg);\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n                setIpfs(ipfsNode);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    if (!isReady()) {\n        return <Loading />;\n    }\n\n    const updateIds = async () => {\n        if(!isReady())\n            return;\n        const currHos = await contract.methods.hospitalId().call({ from: accounts[0] });\n        const currOrg = await contract.methods.organizationId().call({ from: accounts[0] });\n\n        setCurrentHospitalId(currHos);\n        setCurrentOrgId(currOrg);\n    }\n\n    const handleChangeHospital = (e) => {\n        e.preventDefault();\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            setHospitalBuffer(Buffer(reader.result));\n        }\n    }\n\n    const handleChangeOrg = (e) => {\n        e.preventDefault();\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            setOrgBuffer(Buffer(reader.result));\n        }\n    }\n\n    const handleSubmitHospital = async (e) => {\n        e.preventDefault();\n        try {\n            const result = await ipfs.add(hospitalBuffer);\n            await contract.methods.addHospital(hospital.name, hospital.address, hospital.ethAdd.trim(), result.path).send({ from: accounts[0] });\n            await updateIds();\n            window.alert(\"Hospital Registered Successfully\");\n        } catch (error) {\n            window.alert(\"Hospital could not be added. Make sure you are an admin and check input fields\");\n            console.error(error);\n        }\n        setHospital({ name: \"\", address: \"\", ethAdd: \"\" });\n    }\n\n    const handleSubmitOrg = async (e) => {\n        e.preventDefault();\n        try {\n            const result = await ipfs.add(orgBuffer);\n            console.log(\"IPFS Hash\", result);\n            await contract.methods.addOrganization(org.name, org.ethAdd.trim(), result.path).send({ from: accounts[0] });\n            await updateIds();\n            window.alert(\"Organization Registered Successfully\");\n        } catch (error) {\n            window.alert(\"Organization Could not be added. Make sure you are an admin and check input fields\");\n            console.error(error);\n        }\n        setOrg({ name: \"\", ethAdd: \"\" });\n    }\n\n    return (\n        <>\n            <section className=\"auth-dash-wrapper\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Admin's Dashboard</h2>\n                        <p>\n                            Various operations an admin can do.\n                        </p>\n                    </div>\n\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Add new Hospital\n                        </h4>\n                        <span className=\"current-id\">\n                            {`Current Id : ${currentHospitalId}`}\n                        </span>\n                        <div>\n                            <form onSubmit={handleSubmitHospital}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"hospital-name\" placeholder=\"Hospital's Name\" value={hospital.name} onChange={e => setHospital({ ...hospital, name: e.target.value })} required />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"phy-address\" className=\"form-control\" id=\"phy-address\" placeholder=\"Address of hospital\" value={hospital.address} required onChange={e => setHospital({ ...hospital, address: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"ethereum-address\" placeholder=\"Ethereum Address\" value={hospital.ethAdd} required onChange={e => setHospital({ ...hospital, ethAdd: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"file\" name=\"name\" className=\"form-control\" id=\"license\" required onChange={handleChangeHospital} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Add new Organization\n                        </h4>\n                        <span className=\"current-id\">\n                            {`Current Id : ${currentOrgId}`}\n                        </span>\n                        <div>\n                            <form onSubmit={handleSubmitOrg}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"org-name\" placeholder=\"Organization's Name\" value={org.name} onChange={e => setOrg({ ...org, name: e.target.value })} required />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"ethereum-address\" placeholder=\"Ethereum Address\" value={org.ethAdd} onChange={e => setOrg({ ...org, ethAdd: e.target.value })} required />\n                                    </div>\n                                    <br />\n                                    <div className=\"col-md-4 form-group py-1 mx-1\">\n                                        <input type=\"file\" name=\"name\" className=\"form-control\" id=\"license\" required onChange={handleChangeOrg} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Admin\n","import React, { useState, useEffect } from 'react'\nimport Patient from '../../../Components/Patient/Patient';\nimport Record from '../../../Components/Record/Record';\nimport \"./Hospital.css\";\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\nimport { create } from \"ipfs-http-client\";\n\nconst Hospital = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const [ipfs, setIpfs] = useState(undefined);\n    const history = useHistory();\n    const [patientId, setPatientId] = useState(\"\");\n    const [patient, setPatient] = useState(null);\n    const [patientAdd, setPatientAdd] = useState({ name: \"\", id: \"\", gender: \"\", bloodgroup: \"\", dob: \"\", number: \"\", address: \"\", ethAdd: \"\" });\n    const [patientBuffer, setPatientBuffer] = useState(undefined);\n    const [recordAdd, setRecordAdd] = useState({ hosId: \"\", patId: \"\", cond: \"\", desc: \"\", allergy: \"\" });\n    const [recordBuffer, setRecordBuffer] = useState(undefined);\n    const [records, setRecords] = useState([]);\n    const [patId, setPatId] = useState(\"\");\n    const [hospital,setHospital] = useState();\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if (deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n                const ipfsNode = create('https://ipfs.infura.io:5001');\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n                setIpfs(ipfsNode);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    const getPatient = async (e) => {\n        e.preventDefault();\n        try {\n            const pat = await contract.methods.getPatientDetails(patientId).call({ from: accounts[0] });\n            setPatient(pat);\n        } catch (err) {\n            window.alert(\"Could not get details of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setPatientId(\"\");\n    }\n\n    const getRecords = async (e) => {\n        e.preventDefault();\n        setRecords([]);\n        try {\n            const recs = await contract.methods.getPatientRecords(patId).call({ from: accounts[0] });\n            const recsArray = [];\n            for (let i = 0; i < recs[0].length; i++) {\n                recsArray.push({\n                    hospitalId: recs[0][i],\n                    condition: recs[1][i],\n                    description: recs[2][i],\n                    allergy: recs[3][i],\n                    docs: recs[4][i]\n                })\n            }\n            setRecords(recsArray);\n        } catch (err) {\n            console.log(err)\n            window.alert(\"Could not get records of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setPatId(\"\");\n    }\n\n\n    const handleChangePatient = (e) => {\n        e.preventDefault();\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            setPatientBuffer(Buffer(reader.result));\n        }\n    }\n\n    const handleSubmitPatient = async (e) => {\n        e.preventDefault();\n        try {\n            const result = await ipfs.add(patientBuffer);\n            console.log(result);\n            console.log(patientAdd);\n            await contract.methods.addNewPatient(patientAdd.id, patientAdd.name, patientAdd.gender, patientAdd.bloodgroup, patientAdd.dob, patientAdd.number, patientAdd.address, result.path, patientAdd.ethAdd.trim()).send({ from: accounts[0] });\n            window.alert(\"Patient Registered Successfully\");\n        } catch (error) {\n            window.alert(\"Patient could not be added. Make sure you are an authorized and check input fields\");\n            console.error(error);\n        }\n        setPatientAdd({ name: \"\", id: \"\", gender: \"\", bloodgroup: \"\", dob: \"\", number: \"\", address: \"\", ethAdd: \"\" });\n    }\n\n    const handleSubmitRecord = async (e) => {\n        e.preventDefault();\n        try {\n            const result = await ipfs.add(recordBuffer);\n            await contract.methods.addNewRecord(recordAdd.hosId, recordAdd.patId, recordAdd.cond, recordAdd.desc, recordAdd.allergy, result.path).send({ from: accounts[0] });\n            window.alert(\"Record added Successfully\");\n        } catch (error) {\n            window.alert(\"Record could not be added. Make sure you are an authorized and check input fields\");\n            console.error(error);\n        }\n        setRecordAdd({ hosId: \"\", patId: \"\", cond: \"\", desc: \"\", allergy: \"\" })\n    }\n\n    const handleChangeRecord = (e) => {\n        e.preventDefault();\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            setRecordBuffer(Buffer(reader.result));\n        }\n    }\n\n    const getHospital = async (e) => {\n        e.preventDefault();\n        try {\n            const hos = await contract.methods.getHospitalByAddress(accounts[0]).call();\n            setHospital(hos);\n        } catch (error) {\n            console.log(error)\n            window.alert(\"Could not get your details. Please make sure you are registerd as a Hospital\")\n        }\n    }\n\n    if (!isReady()) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            <section className=\"auth-dash-wrapper\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Hospital Dashboard</h2>\n                        <p>\n                            Various operations a hospital can do.\n                        </p>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get Details of Hospital\n                        </h4>\n                        <div>\n                            <form onSubmit={getHospital}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <div className=\"details\">\n                                {!hospital\n                                    ? <></>\n                                    : (<ul>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital Name :</span> {hospital.name}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital Id :</span> {hospital.id}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital's Address :</span> {hospital.physicalAddress}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital's Ethereum Address :</span> {hospital.walletAddress}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3 license\">License :</span>\n                                            <img src={`https://ipfs.io/ipfs/${hospital.License}`} alt=\"license of hospital\" />\n                                        </li>\n                                    </ul>)}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Get Details of Patient\n                        </h4>\n                        <div>\n                            <form onSubmit={getPatient}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"id\" className=\"form-control\" id=\"paitnet-id\" placeholder=\"Patient's Id\" required value={patientId} onChange={e => setPatientId(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {!patient\n                                ? <></>\n                                : <Patient patient={patient} />}\n\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get Records of Patient\n                        </h4>\n                        <div>\n                            <form onSubmit={getRecords}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"id\" className=\"form-control\" id=\"patient-id\" placeholder=\"Patient's Id\" required value={patId} onChange={e => setPatId(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {records.length > 0\n                                ?\n                                records.map((record, index) => {\n                                    return <div key={index}><Record record={record} /></div>\n                                })\n                                : <></>\n                            }\n\n                        </div>\n                    </div>\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Add new Patient\n                        </h4>\n                        <div>\n                            <form onSubmit={handleSubmitPatient}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"patient-name\" placeholder=\"Patient's Name\" required value={patientAdd.name} onChange={e => setPatientAdd({ ...patientAdd, name: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"id\" className=\"form-control\" id=\"patient-id\" placeholder=\"Patient's Id\" required value={patientAdd.id} onChange={e => setPatientAdd({ ...patientAdd, id: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"gender\" className=\"form-control\" id=\"patient-gender\" placeholder=\"Patient's Gender\" required value={patientAdd.gender} onChange={e => setPatientAdd({ ...patientAdd, gender: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"blood-group\" className=\"form-control\" id=\"patient-bg\" placeholder=\"Patient's Blood Group\" required value={patientAdd.bloodgroup} onChange={e => setPatientAdd({ ...patientAdd, bloodgroup: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"dob\" className=\"form-control\" id=\"patient-dob\" placeholder=\"Patient's Date of Birth\" required value={patientAdd.dob} onChange={e => setPatientAdd({ ...patientAdd, dob: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"phone-number\" className=\"form-control\" id=\"phone-number\" placeholder=\"Patient's Phone Number\" required value={patientAdd.number} onChange={e => setPatientAdd({ ...patientAdd, number: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"address\" placeholder=\"Patient's Address\" required value={patientAdd.address} onChange={e => setPatientAdd({ ...patientAdd, address: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control\" id=\"ethereum-address\" placeholder=\"Ethereum Address\" required value={patientAdd.ethAdd} onChange={e => setPatientAdd({ ...patientAdd, ethAdd: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"file\" name=\"name\" className=\"form-control\" id=\"profile-picture\" required onChange={handleChangePatient} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Add new Record\n                        </h4>\n                        <div>\n                            <form onSubmit={handleSubmitRecord}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"hos-id\" className=\"form-control\" id=\"hospital-id\" placeholder=\"Hospital's Id\" required value={recordAdd.hosId} onChange={e => setRecordAdd({ ...recordAdd, hosId: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"id\" className=\"form-control\" id=\"patient-id\" placeholder=\"Patient's Id\" required value={recordAdd.patId} onChange={e => setRecordAdd({ ...recordAdd, patId: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"condition\" className=\"form-control\" id=\"patient-condition\" placeholder=\"Patient's Condition\" required value={recordAdd.cond} onChange={e => setRecordAdd({ ...recordAdd, cond: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"desc\" className=\"form-control\" id=\"descrition\" placeholder=\"Description\" required value={recordAdd.desc} onChange={e => setRecordAdd({ ...recordAdd, desc: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"allergies\" className=\"form-control\" id=\"allergies\" placeholder=\"Patient's Allergies\" required value={recordAdd.allergy} onChange={e => setRecordAdd({ ...recordAdd, allergy: e.target.value })} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"file\" name=\"name\" className=\"form-control\" id=\"document\" required onChange={handleChangeRecord} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Hospital\n","import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n    return new Promise((resolve, reject) => {\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\n        const onLoad =  async () => {\n            // Modern dapp browsers...\n            if (window.ethereum) {\n                const web3 = new Web3(window.ethereum);\n                try {\n                    // Request account access if needed\n                    await window.ethereum.enable();\n                    // Acccounts now exposed\n                    resolve(web3);\n                } catch (error) {\n                    reject(error);\n                }\n            }\n            // Legacy dapp browsers...\n            else if (window.web3) {\n                // Use Mist/MetaMask's provider.\n                const web3 = window.web3;\n                console.log(\"Injected web3 detected.\");\n                resolve(web3);\n            }\n            // none of the above options found. rejecting promise with error.\n            else {\n                reject(\"Please install metamask\");\n            }\n        };\n        onLoad();\n    });\n};\n\nexport { getWeb3 };\n","import React from 'react'\nimport \"./Loading.css\";\n\nconst Loading = () => {\n    return (\n        <div className=\"loading-wrapper\">\n            <div className=\"spinner-border text-primary spinner\" role=\"status\">\n                <span className=\"sr-only\"></span>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n    return (\n        <>\n            <div id=\"header\" className=\"fixed-top\">\n                <div className=\"container d-flex align-items-center\">\n                    <h1 className=\"logo me-auto\">\n                        <Link to=\"/\">\n                            D-Med\n                        </Link>\n                    </h1>\n\n                    <div id=\"navbar\" className=\"navbar order-last order-lg-0\">\n                        <ul>\n                            <li>\n                                <Link to=\"/\">\n                                    Home\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\" className=\"nav-link scrollto\">\n                                    About\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/services\" className=\"nav-link scrollto\">\n                                    Services\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/dashboard\" className=\"nav-link scrollto\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport \"./Counts.css\";\nimport { Icon } from '@iconify/react';\nconst Counts = () => {\n    return (\n        <section id=\"counts\" className=\"counts\">\n            <div className=\"container\">\n\n                <div className=\"row\">\n\n                    <div className=\"col-lg-3 col-md-6\">\n                        <div className=\"count-box\">\n                            <div className=\"icons\">\n                                <Icon icon=\"dashicons:admin-generic\" color=\"white\" width=\"24\" height=\"24\"/>\n                            </div>\n                            <span>85</span>\n                            <p>Admins</p>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-3 col-md-6 mt-5 mt-md-0\">\n                        <div className=\"count-box\">\n                            <div className=\"icons\">\n                                <Icon icon=\"fa-regular:hospital\" color=\"white\" width=\"24\" height=\"24\"/>\n                            </div>\n                            <span>183</span>\n                            <p>Registerd Hospitals</p>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-3 col-md-6 mt-5 mt-lg-0\">\n                        <div className=\"count-box\">\n                            <div className=\"icons\">\n                                <Icon icon=\"si-glyph:man-doctor\" color=\"white\" width=\"24\" height=\"24\"/>\n                            </div>\n                            <span>6587</span>\n                            <p>Registered Patients</p>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-3 col-md-6 mt-5 mt-lg-0\">\n                        <div className=\"count-box\">\n                            <div className=\"icons\">\n                                <Icon icon=\"fa-solid:award\" color=\"white\" width=\"24\" height=\"24\"/>\n                            </div>\n                            <span>44</span>\n                            <p>Organizations</p>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </section>\n    )\n}\n\nexport default Counts\n","import React,{useState,useEffect,useRef} from 'react'\nimport \"./Info.css\";\nimport CLOUDS from 'vanta/dist/vanta.clouds.min'\n\nconst Info = () => {\n\n    const [vantaEffect, setVantaEffect] = useState(0)\n    const myRef = useRef(null)\n    useEffect(() => {\n        if (!vantaEffect) {\n            setVantaEffect(\n                CLOUDS({\n                    el: myRef.current,\n                    mouseControls: false,\n                    touchControls: false,\n                    gyroControls: false,\n                    minHeight: 200.00,\n                    minWidth: 200.00\n                })\n            )\n        }\n        return () => {\n            if (vantaEffect) vantaEffect.destroy()\n        }\n    }, [vantaEffect])\n\n    return (\n        <>\n            <div id=\"hero\" ref={myRef} className=\"d-flex align-items-center\">\n                <div className=\"container\">\n                    <h1>Welcome to D-Med</h1>\n                    <h2>The Future of medical records is BLOCKCHAIN</h2>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Info\n","import React from 'react'\nimport \"./WhyUs.css\";\nimport { Icon } from '@iconify/react';\nimport { Link } from 'react-router-dom';\n\nconst WhyUs = () => {\n    return (\n        <section id=\"why-us\" className=\"why-us\">\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <div className=\"col-lg-4 d-flex align-items-stretch\">\n                        <div className=\"content\">\n                            <h3>Why Choose D-Med?</h3>\n                            <p>\n                                Blockchain technology has a great potential for improving efficiency, security and privacy of Electronic Health Records sharing systems. However, existing solutions relying on a centralized database are susceptible to traditional security problems such as Denial of Service (DoS) attacks and a single point of failure. In addition, past solutions exposed users to privacy linking attacks and did not tackle performance and scalability challenges.\n                            </p>\n                            <div className=\"text-center\">\n                                <Link to=\"/about\" className=\"more-btn\">\n                                    {`Learn More >`}\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 d-flex align-items-stretch\">\n                        <div className=\"icon-boxes d-flex flex-column justify-content-center\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-4 d-flex align-items-stretch\">\n                                    <div className=\"icon-box mt-4 mt-xl-0\">\n                                        <Icon icon=\"fluent:cube-link-20-filled\" color=\"#1977cc\" width=\"40\" height=\"40\" style={{ \"marginBottom\": \"30px\" }} />\n                                        <h4>Based on Blockchain</h4>\n                                        <p>The entire system of D-Med is based on blockchain technology. Hence it is practically un hackable</p>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-4 d-flex align-items-stretch\">\n                                    <div className=\"icon-box mt-4 mt-xl-0\">\n                                        <Icon icon=\"fluent:receipt-bag-24-regular\" color=\"#1977cc\" width=\"40\" height=\"40\" style={{ \"marginBottom\": \"30px\" }} />\n                                        <h4>Smart Contracts</h4>\n                                        <p>There is no actual person behind the organization. It is a smart contract, making it transparent to the public</p>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-4 d-flex align-items-stretch\">\n                                    <div className=\"icon-box mt-4 mt-xl-0\">\n                                        <Icon icon=\"bx:bx-images\" color=\"#1977cc\" width=\"40\" height=\"40\" style={{ \"marginBottom\": \"30px\" }} />\n                                        <h4>IPFS Storage</h4>\n                                        <p>All the media is stored on InterPlanetary File System (IPFS) network. Making it completely safe and private.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </section>\n    )\n}\n\nexport default WhyUs\n","import React from 'react';\nimport Counts from '../../Components/Counts/Counts';\nimport Info from '../../Components/Info/Info';\nimport WhyUs from '../../Components/Why Us/WhyUs';\nimport \"./Home.css\"\n\nconst Home = () => {\n    return (\n        <>\n            <Info/>\n            <WhyUs/>\n            <Counts/>\n        </>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport \"./Bc-Eth-Dmed.css\";\n\nconst BcEthDmed = () => {\n    return (\n        <>\n            <div className=\"what-is-bc\">\n                <h1>\n                    What is a Block Chain ?\n                </h1>\n                <div className=\"bc\">\n                    A blockchain is a distributed database that is shared among the nodes of a computer network. As a database, a blockchain stores information electronically in digital format. Blockchains are best known for their crucial role in cryptocurrency systems, such as Bitcoin, for maintaining a secure and decentralized record of transactions. The innovation with a blockchain is that it guarantees the fidelity and security of a record of data and generates trust without the need for a trusted third party.\n                </div>\n                <h3 className=\"takeaways\">\n                    KEY TAKEAWAYS\n                </h3>\n                <div className=\"bc-1\">\n                    <ul>\n                        <li>\n                            Blockchain is a type of shared database that differs from a typical database in the way it stores information; blockchains store data in blocks that are then linked together via cryptography.\n                        </li>\n                        <li>\n                            As new data comes in it is entered into a fresh block. Once the block is filled with data it is chained onto the previous block, which makes the data chained together in chronological order.\n                        </li>\n                        <li>\n                            Different types of information can be stored on a blockchain but the most common use so far has been as a ledger for transactions.\n                        </li>\n                        <li>\n                            In Bitcoin’s case, blockchain is used in a decentralized way so that no single person or group has control—rather, all users collectively retain control.\n                        </li>\n                        <li>\n                            Decentralized blockchains are immutable, which means that the data entered is irreversible. For Bitcoin, this means that transactions are permanently recorded and viewable to anyone.\n                        </li>\n                        <li>\n                            <a href=\"https://en.wikipedia.org/wiki/Blockchain\" style={{\"textDecoration\":\"underline\"}} target=\"_blank\" rel=\"noreferrer\">\n                                Know more about Block Chain\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"what-is-eth\">\n                <h1>\n                    But What is Ethereum ?\n                </h1>\n                <div className=\"bc\">\n                    Ethereum is a decentralized, open-source blockchain with smart contract functionality. Ether (ETH or Ξ) is the native cryptocurrency of the platform. Amongst cryptocurrencies, Ether is second only to Bitcoin in market capitalization.\n\n                    Ethereum was conceived in 2013 by programmer Vitalik Buterin.In 2014, development work commenced and was crowdfunded, and the network went live on 30 July 2015.The platform allows anyone to deploy permanent and immutable decentralized applications onto it, with which users can interact. Decentralized finance (DeFi) applications provide a broad array of financial services without the need for typical financial intermediaries like brokerages, exchanges, or banks, such as allowing cryptocurrency users to borrow against their holdings or lend them out for interest.Ethereum also allows for the creation and exchange of NFTs, which are non-interchangeable tokens connected to digital works of art or other real-world items and sold as unique digital property. Additionally, many other cryptocurrencies operate as ERC-20 tokens on top of the Ethereum blockchain and have utilized the platform for initial coin offerings.\n                </div>\n                <a href=\"https://ethereum.org/en/\" style={{\"textDecoration\":\"underline\"}} target=\"_blank\" rel=\"noreferrer\">Learn More about Ethereum</a>\n            </div>\n        </>\n    )\n}\n\nexport default BcEthDmed\n","import React from 'react'\nimport \"./Intro.css\"\nconst Intro = () => {\n    return (\n        <>\n            <div className=\"about-us\">\n                <h1>\n                    About Us\n                </h1>\n                <span className=\"intro\">\n                    D-Med is a decentralized solution for Electronic Medical Records sharing systems (EMR). It uses Ethereum network and IPFS technology at its core, giving you complete control of your data. Only authorized people and registerd Medical Institues can acces your records.\n                </span>\n            </div>\n        </>\n    )\n}\n\nexport default Intro\n","import React from 'react'\nimport \"./Problem.css\";\nimport {Icon} from \"@iconify/react\";\n\nconst Problem = () => {\n    return (\n        <>\n            <section id=\"about\" className=\"about\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-7 col-lg-6 icon-boxes d-flex flex-column align-items-stretch justify-content-center py-1 px-lg-5\">\n                            <h2>The Problem</h2>\n                            <p>\n                                An electronic health record is defined as an electronic version of a medical history of the patient as kept by the health care provider. But it consists of some major security and privacy flaws.\n                            </p>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                    <Icon icon=\"dashicons:database-remove\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Potential Cybersecurity Issues\n                                </h4>\n                                <p className=\"description\">The data of the patients lies on a centralized database, which are prone to  Denial of Service (DoS) attacks and single point of failure</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"ri:git-repository-private-fill\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Privacy of Patients\n                                </h4>\n                                <p className=\"description\">If the database ever gets hacked. The data of the Patients can get leaked into the world which is unethical. Centralized systems are vulnerable to privacy attacks as well.</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"bpmn:data-output\"  className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Inaccurate Data\n                                </h4>\n                                <p className=\"description\">If an EMR is not updated immediately, as soon as new information is known, such as after test results come in, anyone viewing that EMR could receive incorrect. This could lead to errors in diagnosis and treatment.</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"emojione-monotone:money-mouth-face\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Time and Money\n                                </h4>\n                                <p className=\"description\">It also takes time to demo EHR products and negotiate with EHR system vendors to choose and implement the right system for your practice.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-5 col-lg-6 video-box d-flex justify-content-center align-items-stretch position-relative\">\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Problem;\n","import React from 'react'\nimport \"./Solution.css\"\nimport {Icon} from \"@iconify/react\";\n\nconst Solution = () => {\n    return (\n        <>\n            <section id=\"about-2\" className=\"about-2\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-5 col-lg-6 video-box d-flex justify-content-center align-items-stretch position-relative\">\n                        </div>\n                        <div className=\"col-xl-7 col-lg-6 icon-boxes d-flex flex-column align-items-stretch justify-content-center py-1 px-lg-5\">\n                            <h2>Our Solution</h2>\n                            <p>\n                                D-Med provides a decentralized easy to use Electronic Medical Record system(EMR). It is a free to use web application providing a feature rich as well as interactive UI making it easy to use. \n                            </p>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"gridicons:not-visible\"  className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Minimal Security Risks\n                                </h4>\n                                <p className=\"description\">As previously mentioned. We use Ethereum Network for our computation making it very safe and secure. There cannot be a single point of failure.</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"gala:secure\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Complete Privacy\n                                </h4>\n                                <p className=\"description\">The application used IPFS technology for storage of patient's data. Every patient can control who can access their data. Only registerd Organizations and verified Medical Institute can access your data.</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"grommet-icons:user-admin\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Verifies Admins\n                                </h4>\n                                <p className=\"description\">For a Medical Institute to participate in this shared system, it need to be verified by one of the admins. Same goes for the Organizations. They require proper medical and identity license to be succesfully registerd.</p>\n                            </div>\n                            <div className=\"icon-box\">\n                                <div className=\"icon\">\n                                <Icon icon=\"emojione-monotone:money-with-wings\" className=\"pro-sol\"/>\n                                </div>\n                                <h4 className=\"title\">\n                                    Non Profit\n                                </h4>\n                                <p className=\"description\">D-Med is a free to use, non profit system. One does not need to buy this software. It is available for everyone. There are some public open feautes which can be accessed by anyone, be it admin, owner or someone visiting the website for he first time. All that is required is a crypto wallet.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Solution\n","import React from 'react'\nimport BcEthDmed from '../../Components/Bc-Eth-Dmed/Bc-Eth-Dmed'\nimport Intro from '../../Components/Intro/Intro'\nimport Problem from '../../Components/Problem/Problem'\nimport Solution from '../../Components/Solution/Solution'\n\nconst About = () => {\n    return (\n        <>\n            <Intro/>\n            <Problem/>\n                <hr />\n            <Solution/>\n                <hr/>\n            <BcEthDmed/>\n        </>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport \"./Services.css\";\nimport { Tab, Row, Col, Nav } from \"react-bootstrap\";\n\nconst Services = () => {\n    return (\n        <>\n            <section id=\"departments\" className=\"departments\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Services</h2>\n                        <p>We offer a variety of services. Some of them are even open for the public to see and test out themselves. Some of the key functionalities include getting the data of patient securely, getting all the record of the patient. Hospitals can add new patients and their records.\n                        </p>\n                    </div>\n\n                    <Tab.Container defaultActiveKey=\"first\">\n                        <Row>\n                            <Col sm={3}>\n                                <Nav className=\"flex-column\">\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"first\">\n                                            Details of Patients\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"second\">\n                                            Medical Records of Patients\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"third\">\n                                            Details of Hospitals\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"fourth\">\n                                            Details of Organizations\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                            </Col>\n                            <Col sm={9}>\n                                <Tab.Content>\n                                    <Tab.Pane eventKey=\"first\">\n                                        <div className=\"col-lg-8 details\">\n                                            <h3>Details of Patients</h3>\n                                            <p className=\"fst-italic\">\n                                                Get the details of the patient using its Id or Ethereum Address.\n                                            </p>\n                                            <p>\n                                                Each patient is assigned an unique id which can be used to get the details of the patient. Aside from the id, if the authorized person knows the address of the patient, then it can also access it's details.\n                                                To Access the details of any patient, the patient itself must give the person authority, only registerd Medical institues can access the data without the authorization.\n                                            </p>\n                                        </div>\n                                        <div className=\"col-lg-4 text-center\">\n                                            <img src=\"\" alt=\"\" className=\"img-fluid\" />\n                                        </div>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"second\">\n                                        <div className=\"col-lg-8 details\">\n                                            <h3>Medical Records of Patients</h3>\n                                            <p className=\"fst-italic\">\n                                                Get the medical records of the patient using its Id or Ethereum Address.\n                                            </p>\n                                            <p>\n                                                The authorized and registerd medical institue can only get the details of the all the medical records of the patient.Each patient is assigned an unique id which can be used to get the details of the patient. Aside from the id, if the authorized person knows the address of the patient, then it can also access it's details. It's rules are same the details of a patient\n                                            </p>\n                                        </div>\n                                        <div className=\"col-lg-4 text-center\">\n                                            <img src=\"\" alt=\"\" className=\"img-fluid\" />\n                                        </div>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"third\">\n                                        <div className=\"col-lg-8 details\">\n                                            <h3>Details of Hospitals</h3>\n                                            <p className=\"fst-italic\">\n                                                Get the details of a Medical Institute using its Id or Ethereum Address.\n                                            </p>\n                                            <p>\n                                                This is a public feature. It is availiable to anyone who has a crypto wallet and is ready to do some transactions. If the person trying to access this funtion knows the registerd Id of the Hospital or it's Ehtereum address. Then it can be accessed. This can be tried in the public dashboard section of the dashboards. Give it a try. Try to enter 1 as the Id to know the details of the first registerd Hospital.\n                                            </p>\n                                        </div>\n                                        <div className=\"col-lg-4 text-center\">\n                                            <img src=\"\" alt=\"\" className=\"img-fluid\" />\n                                        </div>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"fourth\">\n                                        <div className=\"col-lg-8 details\">\n                                            <h3>Details of Organizations</h3>\n                                            <p className=\"fst-italic\">\n                                                Get the details of a registerd Organization using its Id or Ethereum Address.\n                                            </p>\n                                            <p>\n                                                This is a public feature. It is availiable to anyone who has a crypto wallet and is ready to do some transactions. If the person trying to access this funtion knows the registerd Id of the Organization or it's Ehtereum address. Then it can be accessed. This can be tried in the public dashboard section of the dashboards. Give it a try. Try to enter 1 as the Id to know the details of the first registerd Organization.\n                                            </p>\n                                        </div>\n                                        <div className=\"col-lg-4 text-center\">\n                                            <img src=\"\" alt=\"\" className=\"img-fluid\" />\n                                        </div>\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </Col>\n                        </Row>\n                    </Tab.Container>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Services\n","import React from 'react'\nimport \"./Footer.css\";\nimport { Icon } from '@iconify/react';\nconst Footer = () => {\n    return (\n        <>\n            <div id=\"footer\">\n                <div className=\"copy-right\">\n                    <div className=\"icons-container\">\n                        <a href=\"https://github.com/kushagrasingh772\" target=\"_blank\" rel=\"noreferrer\">\n                            <Icon icon=\"akar-icons:github-fill\" color=\"#000000\" />\n                        </a>\n                        <a href=\"https://www.linkedin.com/in/kushagra-singh-16ba661a5/\" target=\"_blank\" rel=\"noreferrer\">\n                            <Icon icon=\"bi:linkedin\" color=\"#1977cc\" />\n                        </a>\n                    </div>\n                    <div className=\"cr\">\n                        &copy; Copyright <strong><span>D-Med</span></strong>. All Rights Reserved\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport \"./MainDashBoard.css\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"@iconify/react\";\n\nconst Dashboard = () => {\n\n    return (\n        <>\n            <section id=\"services\" className=\"services\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Dashboards</h2>\n                    </div>\n\n                    <div className=\"row\">\n                        <Link to=\"/dashboard/public\" className=\"col-lg-4 col-md-6 d-flex align-items-stretch icon-box-wrapper\">\n                            <div className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"si-glyph:person-public\" className=\"i\" /></div>\n                                <h4 className=\"dashboard-text\">Public</h4>\n                                <p className=\"dashboard-text\">These function are open to all and do not need any special privileges to access.</p>\n                            </div>\n                        </Link>\n\n                        <div className=\"col-lg-4 col-md-6 d-flex align-items-stretch mt-4 mt-md-0\">\n                            <Link to=\"/dashboard/authorized\" className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"whh:authentication\" className=\"i\" /></div>\n                                <h4>Authorized</h4>\n                                <p>These funtions are for the authorized organization only. Make sure that you have the correct access rights before you enter.</p>\n                            </Link>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-6 d-flex align-items-stretch mt-4 mt-lg-0\">\n                            <Link to=\"/dashboard/hospital\" className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"healthicons:hospital-outline\" className=\"i\" /></div>\n                                <h4>Hospital</h4>\n                                <p>These funtions are for the verified hospitals only. Make sure that you have the correct access rights before you enter.</p>\n                            </Link>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-6 d-flex align-items-stretch mt-4\">\n                            <Link to=\"/dashboard/patient\" className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"fluent:patient-32-filled\" className=\"i\" /></div>\n                                <h4>Patient</h4>\n                                <p>These funtions are for registerd patients only. Make sure that you have the correct access rights before you enter.</p>\n                            </Link>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-6 d-flex align-items-stretch mt-4\">\n                            <Link to=\"/dashboard/admin\" className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"wpf:administrator\" className=\"i\" /></div>\n                                <h4>Admins</h4>\n                                <p>These funtions are for the admins only. Make sure that you have the correct access rights before you enter.</p>\n                            </Link>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-6 d-flex align-items-stretch mt-4\">\n                            <Link to=\"/dashboard/owner\" className=\"icon-box\">\n                                <div className=\"icon\"><Icon icon=\"eos-icons:admin\" className=\"i\" /></div>\n                                <h4>Owner</h4>\n                                <p>These funtions are for the Owner only. Make sure that you are the owner before you access.</p>\n                            </Link>\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Dashboard\n","import React, { useState, useEffect } from 'react'\nimport \"./PublicDashBoard.css\";\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\n\nconst PublicDashBoard = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const history = useHistory();\n    const [owner, setOwner] = useState(null);\n    const [admin, setAdmin] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(\"\");\n    const [hospitalId, setHospitalId] = useState(\"\");\n    const [hospital, setHospital] = useState(null);\n    const [orgId,setOrgId] = useState(\"\");\n    const [org,setOrg] = useState(null);\n\n\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if(deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork.address,\n                );\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    const getOwner = async (e) => {\n        e.preventDefault();\n\n        const owner = await contract.methods.getOwner().call();\n        setOwner(owner);\n    }\n\n    const getAdmin = async (e) => {\n        e.preventDefault();\n\n        const isAdmin = await contract.methods.isAdmin(admin).call();\n        if (isAdmin)\n            setIsAdmin(admin + \" is an admin\");\n        else\n            setIsAdmin(admin + \" is not an admin\");\n        setAdmin(\"\");\n    }\n\n    const getHospital = async (e) => {\n        e.preventDefault();\n        try {\n            const hos = await contract.methods.getHospitalById(hospitalId).call();\n            setHospital(hos);\n        } catch (error) {\n            console.log(error)\n            window.alert(\"Could not get details of hospital. Please check Hospial Id\")\n        }\n        setHospitalId(\"\");\n    }\n\n    const getOrg = async (e) => {\n        e.preventDefault();\n        try {\n            const hos = await contract.methods.getOrganizationById(orgId).call();\n            setOrg(hos);\n        } catch (error) {\n            window.alert(\"Could not get details of Organization. Please check Organization Id\")\n        }\n        setOrgId(\"\");\n    }    \n\n    if (!isReady()) {\n        return <Loading />;\n    }\n    return (\n        <>\n            <section className=\"appointment \">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Public Dashboard</h2>\n                        <p>\n                            Explore the different features avaliable for public use.\n                        </p>\n                    </div>\n\n                    <div className=\"get-owner\">\n                        <h4>\n                            Get Address of the Owner\n                        </h4>\n                        <div>\n                            <button onClick={getOwner}>Click Here</button>\n                            <span>\n                                {owner ? (`Owner's Address : ${owner}`)\n                                    : \"\"}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div className=\"check-admin\">\n                        <h4>\n                            Check for Admin\n                        </h4>\n                        <div>\n                            <form onSubmit={getAdmin}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"admin-address\" placeholder=\"Admin's Address\" required value={admin} onChange={e => setAdmin(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <div className=\"is-admin\">\n                                {isAdmin}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get Details of Hospital\n                        </h4>\n                        <div>\n                            <form onSubmit={getHospital}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"id\" className=\"form-control\" id=\"hospital-id\" placeholder=\"Hospital's Id\" value={hospitalId} onChange={e => setHospitalId(e.target.value)} required />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <div className=\"details\">\n                                {!hospital\n                                    ? <></>\n                                    : (<ul>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital Name :</span> {hospital.name}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital Id :</span> {hospital.id}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital's Address :</span> {hospital.physicalAddress}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Hospital's Ethereum Address :</span> {hospital.walletAddress}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3 license\">License :</span>\n                                            <img src={`https://ipfs.io/ipfs/${hospital.License}`} alt=\"license of hospital\" />\n                                        </li>\n                                    </ul>)}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get Details of Organization\n                        </h4>\n                        <div>\n                            <form onSubmit={getOrg}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"id\" className=\"form-control\" id=\"org-id\" placeholder=\"Organization's Id\" value={orgId} onChange={e=>setOrgId(e.target.value)} required/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <div className=\"details\">\n                                {!org\n                                    ? <></>\n                                    : (<ul>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Organization Name :</span> {org.name}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Organization Id :</span> {org.id}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3\">Organization's Ethereum Address :</span> {org.walletAddress}\n                                        </li>\n                                        <li className=\"row\">\n                                            <span className=\"col-md-3 license\">License :</span>\n                                            <img src={`https://ipfs.io/ipfs/${org.License}`} alt=\"license of hospital\" />\n                                        </li>\n                                    </ul>)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default PublicDashBoard\n","import React, { useState, useEffect } from 'react'\nimport Patient from '../../../Components/Patient/Patient';\nimport Record from '../../../Components/Record/Record';\nimport \"./Auth.css\";\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\n\nconst Auth = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const history = useHistory();\n    const [patientId, setPatientId] = useState(\"\");\n    const [patientIdRec, setPatientIdRec] = useState(\"\");\n    const [patient, setPatient] = useState(null);\n    const [records, setRecords] = useState([]);\n\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if(deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    const getPatient = async (e) => {\n        e.preventDefault();\n        try {\n            const pat = await contract.methods.getPatientDetails(patientId).call({ from: accounts[0] });\n            setPatient(pat);\n        } catch (err) {\n            window.alert(\"Could not get details of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setPatientId(\"\");\n    }\n\n    const getRecords = async (e) => {\n        e.preventDefault();\n        setRecords([]);\n        try {\n            const recs = await contract.methods.getPatientRecords(patientIdRec).call({ from: accounts[0] });\n            const recsArray = [];\n            for (let i = 0; i < recs[0].length; i++) {\n                recsArray.push({\n                    hospitalId: recs[0][i],\n                    condition: recs[1][i],\n                    description: recs[2][i],\n                    allergy: recs[3][i],\n                    docs: recs[4][i]\n                })\n            }\n            setRecords(recsArray);\n        } catch (err) {\n            console.log(err)\n            window.alert(\"Could not get records of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setPatientIdRec(\"\");\n    }\n\n    if (!isReady()) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            <section className=\"auth-dash-wrapper\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Authorized Dashboard</h2>\n                        <p>\n                            Various operations an authorized person can do.\n                        </p>\n                    </div>\n\n                    <div className=\"get-details-patient\">\n                        <h4>\n                            Get Details of Patient\n                        </h4>\n                        <div>\n                            <form onSubmit={getPatient}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"id\" className=\"form-control\" id=\"paitnet-id\" placeholder=\"Patient's Id\" required value={patientId}\n                                            onChange={e => setPatientId(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {!patient\n                                ? <></>\n                                : <Patient patient={patient} />}\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get Records of Patient\n                        </h4>\n                        <div>\n                            <form onSubmit={getRecords}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"number\" name=\"address\" className=\"form-control\" id=\"patient-id\" placeholder=\"Patient's Id\" required value={patientIdRec} onChange={e => setPatientIdRec(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {records.length > 0\n                                ?\n                                records.map((record, index) => {\n                                    return <div key={index}><Record record={record} /></div>\n                                })\n                                : <></>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Auth\n","import React, { useState, useEffect } from 'react'\nimport \"./Owner.css\";\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\n\nconst Owner = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const history = useHistory();\n    const [addAdmin,setAddAdmin] = useState(\"\");\n    const [removeAdmin,setRemoveAdmin] = useState(\"\");\n    const [transferOwnership,setTransferOwnership] = useState(\"\");\n\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if(deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    const AddAdmin = async (e) => {\n        e.preventDefault();\n        try {\n            await contract.methods.addAdmin(addAdmin.trim()).send({from:accounts[0]});\n            window.alert(\"Admin added successfully\");\n        } catch (error) {\n            window.alert(\"Admin could not be added. Make sure you are the Owner and check the entered Address\");\n            console.error(error);\n        }\n        setAddAdmin(\"\");\n    }\n\n    const RemoveAdmin = async (e) => {\n        e.preventDefault();\n        try{\n            await contract.methods.removeAdmin(removeAdmin.trim()).send({from:accounts[0]});\n            window.alert(\"Admin removed successfully\");\n        }catch(error)\n        {\n            window.alert(\"Admin could not be removed. Make sure you are the Owner and check the entered Address\");\n            console.error(error);\n        }\n        setRemoveAdmin(\"\");\n    }\n\n    const TransferOwnership = async (e) => {\n        e.preventDefault();\n\n        try {\n            await contract.methods.changeOwner(transferOwnership.trim()).send({from:accounts[0]});\n            window.alert(\"Owner changed successfully\");\n        } catch (error) {\n            window.alert(\"Ownership could not be transferred. Make sure you are the Owner and check the entered Address\");\n            console.error(error);\n        }\n    }\n\n    if (!isReady()) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            <section className=\"owner-dash-wrapper\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Owner's Dashboard</h2>\n                        <p>\n                            Various operations the owner can do.\n                        </p>\n                    </div>\n\n                    <div className=\"add-admin\">\n                        <h4>\n                            Add new Admin\n                        </h4>\n                        <div>\n                            <form onSubmit={AddAdmin}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"admin-address\" placeholder=\"Admin's Address\" value={addAdmin} onChange={e=>setAddAdmin(e.target.value)} required/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Remove an Admin\n                        </h4>\n                        <div>\n                            <form onSubmit={RemoveAdmin}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"admin-rmv-address\" placeholder=\"Admin's Address\" value={removeAdmin} onChange={e=>setRemoveAdmin(e.target.value)} required/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Transfer Ownership\n                        </h4>\n                        <div>\n                            <form onSubmit={TransferOwnership}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"owner-address\" placeholder=\"New Owner's Address\" value={transferOwnership} onChange={e=>setTransferOwnership(e.target.value)}/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Owner\n","import React, { useState, useEffect } from 'react'\nimport \"./Patient.css\";\nimport Patient1 from \"../../../Components/Patient/Patient\"\nimport Record from '../../../Components/Record/Record';\nimport { getWeb3 } from \"../../../utils.js\";\nimport DMed from \"../../../contracts/DMed.json\";\nimport Loading from '../../../Components/Loading/Loading';\nimport { useHistory } from 'react-router-dom';\n\nconst Patient = () => {\n\n    const [web3, setWeb3] = useState(undefined);\n    const [accounts, setAccounts] = useState(undefined);\n    const [contract, setContract] = useState(undefined);\n    const history = useHistory();\n    const [yourId, setYourId] = useState(\"\");\n    const [patient, setPatient] = useState(null);\n    const [yourIdRec, setYourIdRec] = useState(\"\");\n    const [records, setRecords] = useState([]);\n    const [addAuthId, setAddAuthId] = useState(\"\");\n    const [addAuthAddress, setAddAuthAddress] = useState(\"\");\n    const [removeAuthId, setRemoveAuthId] = useState(\"\");\n    const [removeAuthAddress, setRemoveAuthAddress] = useState(\"\");\n\n    const isReady = () => {\n        return (\n            typeof contract !== 'undefined'\n            && typeof web3 !== 'undefined'\n            && typeof accounts !== 'undefined'\n        );\n    }\n\n    useEffect(() => {\n        const init = async () => {\n            try {\n                const web3 = await getWeb3();\n                const accounts = await web3.eth.getAccounts();\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = DMed.networks[networkId];\n                if(deployedNetwork === undefined)\n                    throw new Error('Make sure you are on the corrent network. Set the network to Ropsten Test Network');\n                const contract = new web3.eth.Contract(\n                    DMed.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n                setWeb3(web3);\n                setAccounts(accounts);\n                setContract(contract);\n            } catch (error) {\n                window.alert(error);\n                history.push(\"/dashboard\");\n            }\n        }\n        init();\n        if (isReady()) {\n            window.ethereum.on('accountsChanged', accounts => {\n                setAccounts(accounts);\n            });\n        }\n    }, [history]);\n\n    const getPatient = async (e) => {\n        e.preventDefault();\n        try {\n            const pat = await contract.methods.getPatientDetails(yourId).call({ from: accounts[0] });\n            setPatient(pat);\n        } catch (err) {\n            window.alert(\"Could not get details of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setYourId(\"\");\n    }\n\n    const getRecords = async (e) => {\n        e.preventDefault();\n        setRecords([]);\n        try {\n            const recs = await contract.methods.getPatientRecords(yourIdRec).call({ from: accounts[0] });\n            const recsArray = [];\n            for (let i = 0; i < recs[0].length; i++) {\n                recsArray.push({\n                    hospitalId: recs[0][i],\n                    condition: recs[1][i],\n                    description: recs[2][i],\n                    allergy: recs[3][i],\n                    docs: recs[4][i]\n                })\n            }\n            setRecords(recsArray);\n        } catch (err) {\n            console.log(err)\n            window.alert(\"Could not get records of patient. Please make sure you have the correct rights and you have the correct Id\")\n        }\n        setYourIdRec(\"\");\n    }\n\n    const handleAddAuthAddress = async (e) => {\n        e.preventDefault();\n        try {\n            await contract.methods.addAuthByAddress(addAuthAddress.trim()).send({ from: accounts[0] });\n            window.alert(\"Authorized successfully\");\n        } catch (error) {\n            window.alert(\"Could not authorized. Make sure you have the right privileges\");\n            console.error(error);\n        }\n        setAddAuthAddress(\"\");\n    }\n\n    const handleAddAuthId = async (e) => {\n        e.preventDefault();\n        try {\n            await contract.methods.addAuthById(addAuthId).send({ from: accounts[0] });\n            window.alert(\"Authorized successfully\");\n        } catch (error) {\n            window.alert(\"Could not authorized. Make sure you have the right privileges\");\n            console.error(error);\n        }\n        setAddAuthId(\"\");\n    }\n\n    const handleRemoveAuthAddress = async (e) => {\n        e.preventDefault();\n        try {\n            await contract.methods.revokeAuthByAddress(removeAuthAddress.trim()).send({ from: accounts[0] });\n            window.alert(\"Unauthorized successfully\");\n        } catch (error) {\n            window.alert(\"Could not authorized. Make sure you have the right privileges.\");\n            console.error(error);\n        }\n        setRemoveAuthAddress(\"\");\n    }\n\n    const handleRemoveAuthId = async (e) => {\n        e.preventDefault();\n        try {\n            await contract.methods.revokeAuthById(removeAuthId).send({ from: accounts[0] });\n            window.alert(\"Unauthorized successfully\");\n        } catch (error) {\n            window.alert(\"Could not authorized. Make sure you have the right privileges.\");\n            console.error(error);\n        }\n        setRemoveAuthId(\"\");\n    }\n\n    if (!isReady()) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            <section className=\"patient-dash-wrapper\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Patient's Dashboard</h2>\n                        <p>\n                            Various operations the Patient can do.\n                        </p>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get your Details\n                        </h4>\n                        <div>\n                            <form onSubmit={getPatient}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"patient-address\" placeholder=\"Your Id\" required value={yourId} onChange={e => setYourId(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {!patient\n                                ? <></>\n                                : <Patient1 patient={patient} />}\n                        </div>\n                    </div>\n\n                    <div className=\"get-details\">\n                        <h4>\n                            Get your Record\n                        </h4>\n                        <div>\n                            <form onSubmit={getRecords}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"patient-address\" placeholder=\"Your Id\" value={yourIdRec} onChange={e => setYourIdRec(e.target.value)} required />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            {records.length > 0\n                                ?\n                                records.map((record, index) => {\n                                    return <div key={index}><Record record={record} /></div>\n                                })\n                                : <></>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"get-details\">\n                        <h4>\n                            Give Authorization\n                        </h4>\n                        <div>\n                            <form onSubmit={handleAddAuthAddress}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"org-address\" placeholder=\"Organization's Address\" required value={addAuthAddress} onChange={e => setAddAuthAddress(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <span className=\"or\">\n                                Or\n                            </span>\n                            <form onSubmit={handleAddAuthId}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"org-address\" placeholder=\"Organization's Id\" required value={addAuthId} onChange={e => setAddAuthId(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"get-details\">\n                        <h4>\n                            Remove Authorization\n                        </h4>\n                        <div>\n                            <form onSubmit={handleRemoveAuthAddress}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"org-address\" placeholder=\"Organization's Address\" value={removeAuthAddress} onChange={e=>setRemoveAuthAddress(e.target.value)} required/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                            <span className=\"or\">\n                                Or\n                            </span>\n                            <form onSubmit={handleRemoveAuthId}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 form-group py-1\">\n                                        <input type=\"text\" name=\"address\" className=\"form-control\" id=\"org-address\" placeholder=\"Organization's Id\" value={removeAuthId} onChange={e=>setRemoveAuthId(e.target.value)} required/>\n                                    </div>\n                                    <div className=\"col-md-4 form-group mt-3 mt-md-0 py-1\">\n                                        <button type=\"submit\">Click Here</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\nexport default Patient\n","import React from 'react'\nimport Navbar from './Components/Navbar/Navbar'\nimport Home from \"./Pages/Home/Home\";\nimport { Route, Switch } from 'react-router-dom';\nimport About from './Pages/About/About';\nimport Services from './Pages/Services/Services';\nimport Footer from './Components/Footer/Footer';\nimport Dashboard from './Pages/Dashboards/Main/MainDashBoard';\nimport PublicDashBoard from './Pages/Dashboards/Public/PublicDashBorad';\nimport Auth from './Pages/Dashboards/Auth/Auth';\nimport Owner from './Pages/Dashboards/Owner/Owner';\nimport Patient from './Pages/Dashboards/Patient/Patient';\nimport Admin from './Pages/Dashboards/Admin/Admin';\nimport Hospital from './Pages/Dashboards/Hospital/Hospital';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/services\">\n          <Services />\n        </Route>\n        <Route exact path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route exact path=\"/dashboard/public\">\n          <PublicDashBoard />\n        </Route>\n        <Route exact path=\"/dashboard/authorized\">\n          <Auth />\n        </Route>\n        <Route exact path=\"/dashboard/hospital\">\n          <Hospital />\n        </Route>\n        <Route exact path=\"/dashboard/patient\">\n          <Patient />\n        </Route>\n        <Route exact path=\"/dashboard/admin\">\n          <Admin />\n        </Route>\n        <Route exact path=\"/dashboard/owner\">\n          <Owner />\n        </Route>\n        <Route>\n          <Home />\n        </Route>\n      </Switch>\n      <Footer />\n\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\"\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}